; PyCBC configuration for a prototype full mass range CBC search on O3 / O4 data

[workflow]
; https://pycbc.org/pycbc/latest/html/workflow/initialization.html
; file retention level can take 4 possible values
; "all_files"    for debugging the pipeline
; "all_triggers" recommended for normal running
; "merged_triggers" used to rerun with file reuse for changes that do not affect
;                single-detector trigger sets but may affect coinc results
; "results"      used to rerun with file reuse to rerun with changes to plots
file-retention-level = merged_triggers

[workflow-datafind]
; https://pycbc.org/pycbc/latest/html/workflow/datafind.html
datafind-method = AT_RUNTIME_SINGLE_FRAMES

; Look for times when the segment database says that data is analyzable, but
; no frame data exists on disk. If any frame data is missing, raise an error
datafind-check-segment-gaps = update_times

; Stat each frame that datafind returns and fail if any frames are missing
datafind-check-frames-exist = raise_error

[workflow-segments]
; https://pycbc.org/pycbc/latest/html/workflow/segments.html
segments-method = ALL_SINGLE_IFO_TIME

[workflow-tmpltbank]
; See http://pycbc.org/pycbc/latest/html/workflow/template_bank.html
tmpltbank-method = PREGENERATED_BANK
; NOTE - This bank file may or may not be effectual depending on the data and its PSD
tmpltbank-pregenerated-bank = https://git.ligo.org/soumen.roy/HybridBankResults/-/raw/b6f09590/O4DesignPSD-dynamicMM/O4_DESIGN_DYN_FLOW_DYN_MM_HYBRID_BANK_SEOBNRv5.hdf

[workflow-matchedfilter]
; http://pycbc.org/pycbc/latest/html/workflow/matched_filter.html

matchedfilter-method = WORKFLOW_INDEPENDENT_IFOS
min-analysis-segments = 1
min-analysis-length = 528
max-analysis-segments = 10
output-type = hdf
plot-throughput =

;[workflow-full_data]
;injection-file = /home/hannah.griggs/nu/banks/gen_plot_injections/autoinjections/pycbcinjs/injectionsingle_50.hdf

[workflow-coincidence]
; http://pycbc.org/pycbc/latest/html/workflow/hdf_coincidence.html
do-trigger-fitting =

[workflow-singles]
analyze =

[workflow-coincidence-full_data]
; For any given combination of ifos, time shifted coincidences are generated by
; shifting one ifo relative to all the rest
; The shifted ('pivot') ifo will be the one appearing first in this list
timeslide-precedence = H1, L1, V1, K1, I1

[workflow-coincidence-full_data-1det]
parallelization-factor = 10

[workflow-coincidence-full_data-2det]
parallelization-factor = 40

[workflow-coincidence-full_data-3det]
parallelization-factor = 50

;[workflow-coincidence-injections-1det]
;parallelization-factor = 10

;[workflow-coincidence-injections-2det]
;parallelization-factor = 5

;[workflow-coincidence-injections-3det]
;parallelization-factor = 20

[workflow-psd]
parallelization-factor = 10

[workflow-results]
; number of levels of event hierarchical removal to perform
max-hierarchical-removal = 15

[calculate_psd]
cores = 4
low-frequency-cutoff = ${inspiral|low-frequency-cutoff}
pad-data = ${inspiral|pad-data}
strain-high-pass = ${inspiral|strain-high-pass}
sample-rate = ${inspiral|sample-rate}
segment-length = ${inspiral|segment-length}
segment-start-pad = ${inspiral|segment-start-pad}
segment-end-pad = ${inspiral|segment-end-pad}
psd-estimation = ${inspiral|psd-estimation}
psd-segment-length = ${inspiral|psd-segment-length}
psd-segment-stride = ${inspiral|psd-segment-stride}
psd-num-segments = ${inspiral|psd-num-segments}
taper-data = ${inspiral|taper-data}
autogating-threshold = ${inspiral|autogating-threshold}
autogating-cluster = ${inspiral|autogating-cluster}
autogating-width = ${inspiral|autogating-width}
autogating-taper = ${inspiral|autogating-taper}
autogating-pad = ${inspiral|autogating-pad}

[merge_psds]

[calculate_psd-h1]
channel-name = ${workflow|h1-channel-name}
frame-type = ${workflow-datafind|datafind-h1-frame-type}

[calculate_psd-l1]
channel-name = ${workflow|l1-channel-name}
frame-type = ${workflow-datafind|datafind-l1-frame-type}

;[calculate_psd-v1]
;channel-name = ${workflow|v1-channel-name}

[hdf_trigger_merge]

[bank2hdf]

[fit_by_template]
fit-function = exponential
sngl-ranking = ${coinc|sngl-ranking}
stat-threshold = 6.
prune-param = mtotal
log-prune-param =
prune-bins = 3
prune-number = 3
gating-veto-windows = ${coinc|gating-veto-windows}

[fit_over_param]
fit-param = template_duration chi_eff eta
; f_low required to calculate template duration to smooth the fit over
f-lower = ${inspiral|low-frequency-cutoff}
log-param = True False False
smoothing-width = 0.3 0.2 0.08
output-fits-by-template =

[coinc]
; additional time (in seconds) to add to light-travel time to construct time coincidence window
coinc-threshold = 0.002

[coinc&sngls]
# OG: sngl-ranking = newsnr_sgveto_psdvar_threshold
sngl-ranking = newsnr_sgveto
#ranking-statistic = phasetd
ranking-statistic = phasetd_exp_fit_fgbg_norm
randomize-template-order =
gating-veto-windows = H1:-1.25,2.25 L1:-1.25,2.25

statistic-files = file://localhost/home/hannah.griggs/nu/pynu_tests/skyloc/dtdphase/L1H1-stat-1_0_90.hdf https://git.ligo.org/pycbc/offline-analysis/raw/v2.3.1.0/production/o4/kde_files/TEMPLATE_KDE_PYCBCO4_VERSION1.hdf  https://git.ligo.org/pycbc/offline-analysis/raw/v2.3.1.0/production/o4/kde_files/INJECTION_KDE_PYCBCO4_SNR_GT10_VERSION1.hdf

[coinc-full_data]
; time-slide interval in seconds
timeslide-interval = 0.1
; successive levels of decimation to reduce memory load for background coincs below stated values
loudest-keep-values = [15:5,10:30,5:30,0:30]

; Fine-tuned decimation options commented for the moment, to revisit when Virgo joins
;[coinc-full_data-2det]
;loudest-keep-values = [15:5,10:30,5:30,0:30]
;
;[coinc-full_data-3det]
;loudest-keep-values = [10:5,5:30,0:30,-5:30]

;[coinc-injinj]

[sngls]
; cuts on triggers - has to pass signal consistency tests well, and psd must
; be behaving nicely (sigma_multiple)
trigger-cuts = newsnr:5.5:lower traditional_chisq:10:upper sigma_multiple:10:upper
#trigger-cuts = newsnr:5.5:lower traditional_chisq:10:upper 
; Remove templates with lots of triggers, these are liable to be over-smoothed and
; have incorrect increased statistic
template-cuts = fit_by_fit_coeff:2.5:lower

[statmap]
max-hierarchical-removal = ${workflow-results|max-hierarchical-removal}
hierarchical-removal-against = exclusive

[statmap&sngls_statmap]
; time window (in seconds) used to remove triggers around zero-lag coincidences
veto-window = 0.1
; cluster each slide separately over a 10 second window
cluster-window = 10.0
limit-ifar = H1:1000 L1:1000 V1:1000

[sngls_statmap]
max-hierarchical-removal = ${workflow-results|max-hierarchical-removal}
hierarchical-removal-against = ${statmap|hierarchical-removal-against}
; anything with ranking statistic higher than this is considered to possibly be
; foreground for FAR calculation purposes

;[sngls_statmap]
; cluster each slide separately over a 10 second window
far-calculation-method = H1:trigger_fit L1:trigger_fit V1:trigger_fit
fit-function = H1:exponential L1:exponential V1:exponential
fit-threshold = H1:-1.2 L1:0 V1:-1.2

[exclude_zerolag]
limit-ifar = ${statmap|limit-ifar}

[exclude_zerolag-1det]
far-calculation-method = ${sngls_statmap|far-calculation-method}
fit-function = ${sngls_statmap|fit-function}
fit-threshold = ${sngls_statmap|fit-threshold}

[combine_statmap]
cluster-window = ${statmap|cluster-window}
fit-threshold = ${sngls_statmap|fit-threshold}
far-calculation-method = ${sngls_statmap|far-calculation-method}
fit-function = ${sngls_statmap|fit-function}
limit-ifar = ${statmap|limit-ifar}

[combine_statmap-full_data]
max-hierarchical-removal = ${workflow-results|max-hierarchical-removal}
hierarchical-removal-against = inclusive

[foreground_censor]

;[hdfinjfind]
; time in seconds within which a trigger must fall to be associated with an injection
;injection-window = 2.0
;optimal-snr-column = H1:optimal_snr_H1 L1:optimal_snr_L1
;optimal-snr-column = H1:optimal_snr_H1 L1:optimal_snr_L1 V1:optimal_snr_V1

;################################ DQ Config #########################
;[workflow-data_quality]

;[workflow-data_quality-h1_idq]
;background-bins = bin0:SEOBNRv4duration:gt296.119 bin1:SEOBNRv4duration:gt195.815 bin2:SEOBNRv4duration:gt132.434 bin3:SEOBNRv4duration:gt87.071 bin4:SEOBNRv4duration:gt52.884 bin5:SEOBNRv4duration:gt28.853 bin6:SEOBNRv4duration:gt16.041 bin7:SEOBNRv4duration:gt9.261 bin8:SEOBNRv4duration:gt2.801 bin9:SEOBNRv4duration:gt0.073

;[workflow-data_quality-l1_idq]
;background-bins = bin0:SEOBNRv4duration:gt307.826 bin1:SEOBNRv4duration:gt211.737 bin2:SEOBNRv4duration:gt148.313 bin3:SEOBNRv4duration:gt103.808 bin4:SEOBNRv4duration:gt70.849 bin5:SEOBNRv4duration:gt43.207 bin6:SEOBNRv4duration:gt19.101 bin7:SEOBNRv4duration:gt4.303 bin8:SEOBNRv4duration:gt0.147 bin9:SEOBNRv4duration:gt0.073

; aux reranking info
;[calculate_dq-h1]
;output-channel = H1:DQ-STREAM

;[calculate_dq-l1]
;output-channel = L1:DQ-STREAM

;[calculate_dqflag-h1]
;output-channel = ${calculate_dq-h1|output-channel}

;[calculate_dqflag-l1]
;output-channel = ${calculate_dq-l1|output-channel}

;[bin_trigger_rates_dq]
;stat-threshold = 6.5
;sngl-ranking = ${coinc|sngl-ranking}
;n-time-bins = 2
;f-lower = ${inspiral|low-frequency-cutoff}

;[bin_trigger_rates_dq-h1]
;background-bins = ${workflow-data_quality-h1_idq|background-bins}
;dq-channel = ${calculate_dq-h1|output-channel}

;[bin_trigger_rates_dq-l1]
;background-bins = ${workflow-data_quality-l1_idq|background-bins}
;dq-channel = ${calculate_dq-l1|output-channel}

;[calculate_dq]

;[calculate_dqflag]
;sample-frequency = 1

;[rerank_dq]

;[rerank_dq-h1]
;input-channel = ${calculate_dq-h1|output-channel}

;[rerank_dq-l1]
;input-channel = ${calculate_dq-l1|output-channel}
